# launch gazebo and rviz
roslaunch gazebo_ros empty_world.launch
rviz

## gazebo内の重力off
rosservice call /gazebo/set_physics_properties "
time_step: 0.001
max_update_rate: 1000.0
gravity:
  x: 0.0
  y: 0.0
  z: 0.0
ode_config:
  auto_disable_bodies: False
  sor_pgs_precon_iters: 0
  sor_pgs_iters: 50
  sor_pgs_w: 1.3
  sor_pgs_rms_error_tol: 0.0
  contact_surface_layer: 0.001
  contact_max_correcting_vel: 100.0
  cfm: 0.0
  erp: 0.2
  max_contacts: 20"

# spawn kinect in gazebo and rviz
source ~/catkin_ws/devel/setup.bash
rosrun gazebo_ros spawn_model -urdf -file kinect.urdf -model kinect 1 0 0.5 0 0.35 3.14
## modelの位置をpublish
rqt
/gazebo/set_model_state
model_name: 'camera'
pose:
 position:
   x: 1
   y: 0
   z: 0.5
 orientation:
   x: -0.1741
   y: 0.0001
   z: 0.9847
   w: 0.0008

rosrun kinect_bringup tf_camera.py world kinect 1 0 0.5 0 0.35 3.14

# spawn object in gazebo
cd ~/catkin_ws/src/kinect_bringup/urdf/models
rosrun gazebo_ros spawn_model -urdf -file object.urdf -model kobject -x 0 -y 0 -z 0.05 -r 0.0 -p 0.582 -y 0.0


1, spawn movable tf in rviz
rosrun kinect_bringup tf_state_publisher.py world kobject 0 0 0.05 0 0.582 0

or

2, you can move object at random by running below command
rosrun kinect_bringup random_move.py 


# record kinect topic and centroid to files
cd ~/catkin_ws/src/kinect_bringup/data/data1
rosrun kinect_bringup record input:=/kinect/sd/points number_of_data

# make dataset(Normalized voxel and centroid) after record pcd files
cd ~/catkin_ws/src/kinect_bringup/data/data1
rosrun kinect_bringup make_voxel_data number_of_data

# make hdf file(cloud and pos, ori) from csv files
cd ~/catkin_ws/src/kinect_bringup/data/data1
rosrun kinect_bringup from_csv2hdf.py -n number of dataset

